/*
 * Copyright (C) 2023 Radix IoT LLC. All rights reserved.
 */

const {createClient, addLoginHook, assertPropertiesDeepEqual, uuid} = require('@radixiot/mango-module-tools/test-helper/testHelper');
const client = createClient();

const validateSchema = {
{{#each (schemas_for_paths paths)}}
    '{{title}}': function(item, path) {
        {{>assert . use_validate=false validate_object="this" data_path="item" message="path"}}
    }{{#unless @last}},{{/unless}}
{{/each}}
};

// {{apiDocs.info.title}} - {{tag.description}}
describe('{{tag.name}}', function() {
    addLoginHook(client);

    beforeEach('Create object', function() {
        if (!this.currentTest.hasOwnProperty('createObject')) {
            this.currentTest.createObject = {
                // your default object here
            };
        }

        if (this.currentTest.createObject) {
            return client.restRequest({
                method: 'POST',
                path: '{{apiDocs.basePath}}{{paths.[0].path}}',
                data: this.currentTest.createObject
            }).then((response) => {
                this.currentTest.savedObject = response.data;
                this.currentTest.xid = response.data.xid;
            });
        }
    });

    afterEach('Delete object', function() {
        if (this.currentTest.xid) {
            return client.restRequest({
                method: 'DELETE',
                path: `{{apiDocs.basePath}}{{paths.[0].path}}/${this.currentTest.xid}`,
            });
        }
    });

{{#each paths}}
    {{>test .. path=.}}

{{/each}}
});
